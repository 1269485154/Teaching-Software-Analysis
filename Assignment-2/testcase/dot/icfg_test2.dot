digraph "ICFG" {
	label="ICFG";

	Node0x10150aa40 [shape=record,color=black,label="{NodeID: 25\nIntraBlockNode ID: 25   br label %while.cond \{fun: main\}}"];
	Node0x10150aa40 -> Node0x101508350[style=solid];
	Node0x10150a8e0 [shape=record,color=black,label="{NodeID: 24\nIntraBlockNode ID: 24   store i32 %inc, i32* %a, align 4 \{fun: main\}}"];
	Node0x10150a8e0 -> Node0x10150aa40[style=solid];
	Node0x10150a6b0 [shape=record,color=green,label="{NodeID: 23\nFunExitBlockNode ID: 23 Exit(\{  \})\n \{fun: main\}}"];
	Node0x10150a4d0 [shape=record,color=black,label="{NodeID: 22\nIntraBlockNode ID: 22   %inc = add nsw i32 %1, 1 \{fun: main\}}"];
	Node0x10150a4d0 -> Node0x10150a8e0[style=solid];
	Node0x10150a200 [shape=record,color=black,label="{NodeID: 21\nIntraBlockNode ID: 21   ret i32 0 \{fun: main\}}"];
	Node0x10150a200 -> Node0x10150a6b0[style=solid];
	Node0x101509ff0 [shape=record,color=black,label="{NodeID: 20\nIntraBlockNode ID: 20   %1 = load i32, i32* %a, align 4 \{fun: main\}}"];
	Node0x101509ff0 -> Node0x10150a4d0[style=solid];
	Node0x101509dd0 [shape=record,color=blue,label="{NodeID: 19\nRetBlockNode ID: 19   call void @sink() \{fun: main\}}"];
	Node0x101509dd0 -> Node0x10150a200[style=solid];
	Node0x101509c50 [shape=record,color=red,label="{NodeID: 18\nCallBlockNode ID: 18   call void @sink() \{fun: main\}|{|<s1>0x101506ec8}}"];
	Node0x101509c50 -> Node0x101509dd0[style=solid];
	Node0x101509c50:s1 -> Node0x101507030[style=solid,color=red];
	Node0x101509a30 [shape=record,color=blue,label="{NodeID: 17\nRetBlockNode ID: 17   call void @src() \{fun: main\}}"];
	Node0x101509a30 -> Node0x101509ff0[style=solid];
	Node0x1015098b0 [shape=record,color=red,label="{NodeID: 16\nCallBlockNode ID: 16   call void @src() \{fun: main\}|{|<s1>0x101506c98}}"];
	Node0x1015098b0 -> Node0x101509a30[style=solid];
	Node0x1015098b0:s1 -> Node0x101505930[style=solid,color=red];
	Node0x101509750 [shape=record,color=black,label="{NodeID: 15\nIntraBlockNode ID: 15   br i1 %cmp, label %while.body, label %while.end \{fun: main\}}"];
	Node0x101509750 -> Node0x1015098b0[style=solid];
	Node0x101509750 -> Node0x101509c50[style=solid];
	Node0x101508530 [shape=record,color=black,label="{NodeID: 14\nIntraBlockNode ID: 14   %cmp = icmp sle i32 %0, 1 \{fun: main\}}"];
	Node0x101508530 -> Node0x101509750[style=solid];
	Node0x101508350 [shape=record,color=black,label="{NodeID: 13\nIntraBlockNode ID: 13   %0 = load i32, i32* %a, align 4 \{fun: main\}}"];
	Node0x101508350 -> Node0x101508530[style=solid];
	Node0x1015081d0 [shape=record,color=black,label="{NodeID: 12\nIntraBlockNode ID: 12   br label %while.cond \{fun: main\}}"];
	Node0x1015081d0 -> Node0x101508350[style=solid];
	Node0x101507fc0 [shape=record,color=black,label="{NodeID: 11\nIntraBlockNode ID: 11   store i32 1, i32* %a, align 4 \{fun: main\}}"];
	Node0x101507fc0 -> Node0x1015081d0[style=solid];
	Node0x101507e10 [shape=record,color=black,label="{NodeID: 10\nIntraBlockNode ID: 10   store i32 0, i32* %retval, align 4 \{fun: main\}}"];
	Node0x101507e10 -> Node0x101507fc0[style=solid];
	Node0x101509680 [shape=record,color=black,label="{NodeID: 9\nIntraBlockNode ID: 9   %a = alloca i32, align 4 \{fun: main\}AddrPE: [4294967253\<--14]    %a = alloca i32, align 4\{  \}}"];
	Node0x101509680 -> Node0x101507e10[style=solid];
	Node0x1015094d0 [shape=record,color=black,label="{NodeID: 8\nIntraBlockNode ID: 8   %retval = alloca i32, align 4 \{fun: main\}AddrPE: [4294967254\<--13]    %retval = alloca i32, align 4\{  \}}"];
	Node0x1015094d0 -> Node0x101509680[style=solid];
	Node0x1015093c0 [shape=record,color=yellow,label="{NodeID: 7\nFunEntryBlockNode ID: 7 Entry(\{  \})\n \{fun: main\}}"];
	Node0x1015093c0 -> Node0x101505870[style=solid];
	Node0x1015093c0 -> Node0x1015094d0[style=solid];
	Node0x1015072c0 [shape=record,color=green,label="{NodeID: 6\nFunExitBlockNode ID: 6 Exit(\{  \})\n \{fun: sink\}|{<s0>0x101506ec8}}"];
	Node0x1015072c0:s0 -> Node0x101509dd0[style=solid,color=blue];
	Node0x101507110 [shape=record,color=black,label="{NodeID: 5\nIntraBlockNode ID: 5   ret void \{fun: sink\}}"];
	Node0x101507110 -> Node0x1015072c0[style=solid];
	Node0x101507030 [shape=record,color=yellow,label="{NodeID: 4\nFunEntryBlockNode ID: 4 Entry(\{  \})\n \{fun: sink\}}"];
	Node0x101507030 -> Node0x101507110[style=solid];
	Node0x101506f10 [shape=record,color=green,label="{NodeID: 3\nFunExitBlockNode ID: 3 Exit(\{  \})\n \{fun: src\}|{<s0>0x101506c98}}"];
	Node0x101506f10:s0 -> Node0x101509a30[style=solid,color=blue];
	Node0x101505a10 [shape=record,color=black,label="{NodeID: 2\nIntraBlockNode ID: 2   ret void \{fun: src\}}"];
	Node0x101505a10 -> Node0x101506f10[style=solid];
	Node0x101505930 [shape=record,color=yellow,label="{NodeID: 1\nFunEntryBlockNode ID: 1 Entry(\{  \})\n \{fun: src\}}"];
	Node0x101505930 -> Node0x101505a10[style=solid];
	Node0x101505870 [shape=record,color=purple,label="{NodeID: 0\nCopyPE: [2\<--3]  i8* null\{ Can only get source location for instruction, argument, global var or function. \}AddrPE: [4294967262\<--10]  ; Function Attrs: noinline nounwind optnone uwtable\ndefine dso_local void @src() #0 \{\nentry:\n  ret void\n\}\n\{  \}AddrPE: [4294967259\<--11]  ; Function Attrs: noinline nounwind optnone uwtable\ndefine dso_local void @sink() #0 \{\nentry:\n  ret void\n\}\n\{  \}AddrPE: [4294967256\<--12]  ; Function Attrs: noinline nounwind optnone uwtable\ndefine dso_local i32 @main() #0 \{\nentry:\n  %retval = alloca i32, align 4\n  %a = alloca i32, align 4\n  store i32 0, i32* %retval, align 4\n  store i32 1, i32* %a, align 4\n  br label %while.cond\n\nwhile.cond:                                       ; preds = %while.body, %entry\n  %0 = load i32, i32* %a, align 4\n  %cmp = icmp sle i32 %0, 1\n  br i1 %cmp, label %while.body, label %while.end\n\nwhile.body:                                       ; preds = %while.cond\n  call void @src()\n  %1 = load i32, i32* %a, align 4\n  %inc = add nsw i32 %1, 1\n  store i32 %inc, i32* %a, align 4\n  br label %while.cond\n\nwhile.end:                                        ; preds = %while.cond\n  call void @sink()\n  ret i32 0\n\}\n\{  \}}"];
}
